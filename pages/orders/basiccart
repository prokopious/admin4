import { useRouter } from "next/router"
import { useQuery, useMutation, gql } from "@apollo/client"
import axios from "axios"
import Router from "next/router"
import products from "../../products.json"
import { useState } from "react"
import { FiPlusSquare } from "react-icons/fi"
import { FiMinusSquare } from "react-icons/fi"
import { useEffect } from "react"

const Order = () => {
  const router = useRouter()
  const { id } = router.query
  const [data2, setData2] = useState([])

  useEffect(() => {
    fetch(
      `https://dyh4j4u2r5.execute-api.us-east-1.amazonaws.com/latest/orders/${id}`
    )
      .then(response => response.json())
      .then(data2 => {
        setData2(data2) // new
      })
  }, [])

  const defaultCart = {
    products: {},
  }
  const [cart, updateCart] = useState(defaultCart)

  const newItems = Object.keys(cart.products).map(key => {
    const product = products.find(({ id }) => `${id}` === `${key}`)

    return {
      ...cart.products[key],
      pricePerUnit: product.price,
    }
  })
  const cartItems = Object.keys(products).map(key => {
    const item = newItems.find(({ id }) => `${id}` === `${key}`)
    return {
      ...newItems[key],
    }
  })

  var find = newItems.find(x => x.id === "C")
  console.log(find)

  const changeItem = async () => {
    const status = { pizza: newItems }

    try {
      const resp = axios.put(
        `https://dyh4j4u2r5.execute-api.us-east-1.amazonaws.com/latest/change/${id}`,
        status
      )
    } catch (err) {
      // Handle Error Here
      console.error(err)
    }
  }

  const subtotal = newItems.reduce(
    (accumulator, { pricePerUnit, quantity }) => {
      return accumulator + pricePerUnit * quantity
    },
    0
  )

  const quantity = newItems.reduce((accumulator, { quantity }) => {
    return accumulator + quantity
  }, 0)

  function addToCart({ id }) {
    updateCart(prev => {
      let cart = { ...prev }

      if (cart.products[id]) {
        cart.products[id].quantity = cart.products[id].quantity + 1
      } else {
        cart.products[id] = {
          id,
          quantity: 1,
        }
      }

      return cart
    })
  }

  function removeFromCart({ id }) {
    updateCart(prev => {
      let cart = { ...prev }

      if (cart.products[id].quantity > 0) {
        cart.products[id].quantity = cart.products[id].quantity - 1
      } else {
        cart.products[id].quantity = cart.products[id].quantity + 0
      }

      return cart
    })
  }

  const squirrel = data2

  const myFunction = () => {
    if (confirm("Delete order?")) {
      deleteItem()
    }
  }

  const deleteItem = async () => {
    try {
      const resp = axios
        .delete(
          `https://dyh4j4u2r5.execute-api.us-east-1.amazonaws.com/latest/orders/${squirrel.id}`
        )
        .then(Router.push("/"))
    } catch (err) {
      // Handle Error Here
      console.error(err)
    }
  }

  return (
    <div id="boxy">
      <div className="box">
     
      

      </div>

      <h3>
        <div>New order: </div>
 
      </h3>
      <div>
        {products.map(product => {
          const { id, title, price } = product
          var find = newItems.find(x => x.id === product.id)
          if (find === undefined) {
            return (
              <div className="chipmunk" key={id}>
                <div>{title}</div>
                <div>0</div>
                <div>
                  <button className="butt" onClick={() => addToCart({ id })}>
                    <FiPlusSquare />
                  </button>

                  <button
                    className="butt"
                    onClick={() => removeFromCart({ id })}
                  >
                    <FiMinusSquare />
                  </button>
                </div>
              </div>
            )
          } else {
            var found = newItems.find(x => x.id === product.id).quantity
            return (
              <div className="chipmunk" key={id}>
                <div>{title}</div>
                <div>{found}</div>
                <div>
                  <button className="butt" onClick={() => addToCart({ id })}>
                    <FiPlusSquare />
                  </button>

                  <button
                    className="butt"
                    onClick={() => removeFromCart({ id })}
                  >
                    <FiMinusSquare />
                  </button>
                </div>
              </div>
            )
          }
        })}
      </div>
      <h2>
        <div>New total: ${subtotal}</div>
        <button onClick={changeItem}>update order</button>
      </h2>
    </div>
  )
}

export default Order
